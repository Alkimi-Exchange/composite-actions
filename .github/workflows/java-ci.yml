name: Java CI

on:
  workflow_call:
    inputs:
      java-version:
        description: "Java version to use"
        required: false
        default: "17"
        type: string
      build-tool:
        description: "Build tool (maven or gradle)"
        required: false
        default: "maven"
        type: string
    secrets:
      SONAR_HOST_URL:
        required: true
      SONAR_TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: false
      SNYK_TOKEN:
        required: false

jobs:
  docker_build:
    uses: Alkimi-Exchange/composite-actions/.github/workflows/docker-build.yml@main
    with:
      push: true

  build_lint_test:
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ inputs.java-version }}

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-java-${{ inputs.build-tool }}-${{ hashFiles('**/pom.xml', '**/build.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-java-${{ inputs.build-tool }}-

      - name: Install Dependencies and Build
        run: |
          if [ "${{ inputs.build-tool }}" == "maven" ]; then
            mvn clean install --batch-mode
          else
            ./gradlew build
          fi

      - name: Run Tests
        run: |
          if [ "${{ inputs.build-tool }}" == "maven" ]; then
            mvn test
          else
            ./gradlew test
          fi

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/*.xml

  security_scan_snyk:
    needs: build_lint_test
    if: success()
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Snyk Security Scan
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --skip-unresolved=true

  code_quality_sonar:
    needs: build_lint_test
    if: success()
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: sonarsource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  release-please:
    needs: [docker_build, code_quality_sonar, security_scan_snyk]
    if: success() && github.ref == 'refs/heads/main'
    uses: Alkimi-Exchange/composite-actions/.github/workflows/release.yml@main
    with:
      release-type: "java"

  notify_ci_failure:
    needs: [build_lint_test, security_scan_snyk, code_quality_sonar, release-please]
    if: failure()
    uses: Alkimi-Exchange/composite-actions/.github/workflows/notify.yml@main
    with:
      SLACK_MESSAGE: "ðŸš¨ Build failed in *${{ github.repository }}* on `${{ github.ref_name }}`"
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
