name: Build and Push Docker Image
description: |
  Builds and pushes a Docker image to GitHub Container Registry.
  Supports multi-platform builds, custom build arguments, and caching.

on:
  workflow_call:
    inputs:
      buildArgs:
        description: 'Build arguments'
        required: false
        type: string
      platforms:
        description: 'Target platforms (comma-separated)'
        required: false
        default: 'linux/amd64'
        type: string
      context:
        description: 'Docker context'
        required: false
        default: '.'
        type: string
      gcp-project-id: 
        description: "GCP Project Id"
        required: true
        type: string
      push:
        description: 'Push the image to GCR'
        required: false
        default: true
        type: boolean
      skip-smoke-tests:
        description: 'Skip running smoke tests'
        required: false
        default: false
        type: boolean
    secrets:
      GCR_JSON_KEY:
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ${{ inputs.context }}/Dockerfile
          failure-threshold: warning

      - name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: gcr.io/${{ inputs.gcp-project-id }}/${{ github.repository }}
          tags: |
            type=sha,format=short,prefix=

      - name: Build and Push with Cache
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.platforms }}
          build-args: ${{ inputs.buildArgs }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true

      - name: Run Smoke Test
        if: ${{ !inputs.skip-smoke-tests }}
        run: |
          echo "IMAGE_TAG=${{ steps.meta.outputs.tags }}" >> $GITHUB_ENV
          docker-compose -f docker-compose.yml up --exit-code-from smoketest
          docker-compose -f docker-compose.yml down --volumes

      - name: Cache Trivy Database
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: cache-trivy-${{ runner.os }}-2025-03-21
          restore-keys: |
            cache-trivy-${{ runner.os }}-

      - name: Scan Docker Image
        id: scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.meta.outputs.tags }}
          severity: CRITICAL
          exit-code: 1
          format: cyclonedx
          output: ${{ github.workspace }}/dependency-results.sbom.json
          scanners: vuln
          ignore-unfixed: true

      - name: Upload trivy report as a Github artifact
        if: steps.scan.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: trivy-sbom-report
          path: '${{ github.workspace }}/dependency-results.sbom.json'
          retention-days: 7

      - name: Push Docker Image
        if: ${{ inputs.push && success() }}
        run: |
          docker push ${{ steps.meta.outputs.tags }}