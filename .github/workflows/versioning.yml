name: Determine Next Version

on:
  workflow_call:
    outputs:
      version:
        description: "The determined next version"
        value: ${{ jobs.determine_next_version.outputs.version }}

jobs:
  determine_next_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.calculate_version.outputs.version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch Git Tags
        run: git fetch --tags

      - name: Calculate Next Version
        id: calculate_version
        run: |
          # Get the latest tag or default to 0.0.0
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")

          # Parse the version number
          IFS='.' read -r major minor patch <<< "$latest_tag"

          # Default to a patch bump
          patch=$((patch + 1))

          # Check commit message for #major or #minor
          commit_message=$(git log -1 --pretty=%B)
          if [[ "$commit_message" == *"#major"* ]]; then
            major=$((major + 1))
            minor=0
            patch=0
          elif [[ "$commit_message" == *"#minor"* ]]; then
            minor=$((minor + 1))
            patch=0
          fi

          # Append pre-release suffix if not on main branch
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            pre_release=""
          else
            pre_release="-alpha.${{ github.run_number }}"
          fi

          # Construct the new version
          new_version="${major}.${minor}.${patch}${pre_release}"
          echo "version=$new_version" >> $GITHUB_OUTPUT
          echo "âœ… Determined version: $new_version"
