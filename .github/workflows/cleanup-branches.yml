name: Cleanup Stale Branches

on:
  workflow_call:
    inputs:
      DELETE_MERGED:
        description: "Set to true to delete merged branches"
        required: false
        default: "false"
        type: string
      NOTIFY_SLACK:
        description: "Set to true to send Slack notifications"
        required: false
        default: "false"
        type: string
    secrets:
      SLACK_WEBHOOK_URL:
        required: false

jobs:
  cleanup-branches:
    runs-on: self-hosted
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Identify merged branches
        id: merged
        run: |
          git fetch --all --prune
          
          DEFAULT_BRANCH=$(git remote show origin | awk '/HEAD branch/ {print $NF}')
          if [[ -z "$DEFAULT_BRANCH" ]]; then
            echo "❌ Failed to determine the default branch. Exiting..." >&2
            exit 1
          fi
          echo "✅ Default branch detected: $DEFAULT_BRANCH"
          
          echo "🔄 Fetching remote branches..."
          git branch -r
          
          MERGED_BRANCHES=$(git branch -r --merged origin/$DEFAULT_BRANCH | grep -vE "origin/($DEFAULT_BRANCH|HEAD)" | sed 's/origin\///')

          if [[ -n "$MERGED_BRANCHES" ]]; then
            echo "✅ Merged branches found:"
            echo "$MERGED_BRANCHES"
            echo "merged_branches<<EOF" >> $GITHUB_ENV
            echo "$MERGED_BRANCHES" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "✅ No merged branches found."
          fi

      - name: Identify unmerged branches
        id: unmerged
        run: |
          echo "🔍 Verifying remote branches exist before checking unmerged branches..."
          git branch -r
          DEFAULT_BRANCH=$(git remote show origin | awk '/HEAD branch/ {print $NF}')
          if [[ -z "$DEFAULT_BRANCH" ]]; then
            echo "❌ Default branch is empty. Skipping unmerged branch detection." >&2
            exit 1
          fi
          
          UNMERGED_BRANCHES=$(git branch -r --no-merged origin/$DEFAULT_BRANCH | grep -vE "origin/($DEFAULT_BRANCH|HEAD)" | sed 's/origin\///')
          
          if [[ -n "$UNMERGED_BRANCHES" ]]; then
            echo "🚨 Unmerged branches detected:"
            echo "$UNMERGED_BRANCHES"
            echo "unmerged_branches<<EOF" >> $GITHUB_ENV
            echo "$UNMERGED_BRANCHES" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "✅ No unmerged branches found."
          fi

      - name: Delete merged branches (Optional)
        if: inputs.DELETE_MERGED == 'true' && env.merged_branches != ''
        run: |
          for branch in ${{ env.merged_branches }}; do
            git push origin --delete "$branch"
          done

      - name: Create GitHub Issue for Unmerged Branches
        if: env.unmerged_branches != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            const { owner, repo } = context.repo;
            const branches = `${process.env.unmerged_branches}`;
            const issueTitle = "🚨 Unmerged Branches Detected";
            const issueBody = `The following branches have unmerged changes:\n\n\`\`\`\n${branches}\n\`\`\``;

            const issue = await github.rest.issues.create({
              owner,
              repo,
              title: issueTitle,
              body: issueBody
            });
            console.log(`Issue created: ${issue.data.html_url}`);
            
            core.exportVariable("issue_url", issue.data.html_url);

      - name: Send Slack Notification (Optional)
        if: inputs.NOTIFY_SLACK == 'true' && (env.unmerged_branches != '' || env.merged_branches != '')
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: |
            🚀 *Branch Cleanup Summary for ${{ github.repository }}* 🚀
            ✅ *Merged Branches (Safe to Delete)*:
                The following branches have been successfully merged and can be safely removed:
                ```
                ${{ env.merged_branches }}
                ```
            🚨 *Unmerged Branches (Require Attention)*:
                The following branches have unmerged changes and need review:
                ```
                ${{ env.unmerged_branches }}
                ```
            🔗 *Action Required*: <${{ env.issue_url }}|View GitHub Issue>
