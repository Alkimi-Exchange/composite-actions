name: Python CI

on:
  workflow_call:
    inputs:
      python-version:
        description: "Python version to use"
        required: false
        default: "3.10"
        type: string
      sonar-project-key:
        description: "SonarQube project key"
        required: true
        type: string
      sonar-organization:
        description: "SonarQube organization"
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: false

jobs:
  determine-version:
    uses: Alkimi-Exchange/composite-actions/.github/workflows/versioning.yml@main

  build-lint-test:
    needs: determine-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pylint pytest pytest-junit sonar-scanner

      - name: Lint with Flake8
        run: flake8 . --count --show-source --statistics

      - name: Lint with Pylint (fail if score < 5)
        run: pylint $(git ls-files '*.py') --fail-under=5

      - name: Run tests with pytest
        run: pytest --junitxml=test-results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results.xml
  
  snyk-security-scan:
    needs: build-lint-test
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Snyk scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          pip install snyk
          snyk auth $SNYK_TOKEN
          snyk test --all-projects --severity-threshold=high

  sonar-analysis:
    needs: build-lint-test
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"
        run: |
          sonar-scanner \
            -Dsonar.projectKey=${{ inputs.sonar-project-key }} \
            -Dsonar.organization=${{ inputs.sonar-organization }} \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN

  tag-version:
    needs: [sonar-analysis, snyk-security-scan]
    if: success() && github.ref == 'refs/heads/main'
    uses: Alkimi-Exchange/composite-actions/.github/workflows/tag-version.yml@main
    with:
      version: ${{ needs.determine-version.outputs.version }}

  notify-failure:
    needs: [determine-version, build-lint-test, snyk-security-scan, sonar-analysis, tag-version]
    if: failure()
    uses: Alkimi-Exchange/composite-actions/.github/workflows/notify-failure.yml@main
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
