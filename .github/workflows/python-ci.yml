name: Python CI

on:
  workflow_call:
    inputs:
      python-version:
        description: "Python version to use"
        required: false
        default: "3.10"
        type: string
    secrets:
      SONAR_HOST_URL:
        required: true
      SONAR_TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: false
      SNYK_TOKEN:
        required: false

jobs:
  build_lint_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pylint pytest

      - name: Run Flake8 Linter
        run: flake8 . --count --show-source --statistics || true

      - name: Run Pylint (Fail if Score < 5)
        run: pylint $(git ls-files '*.py') --fail-under=5 || true

      - name: Run Tests with Pytest
        run: pytest --junitxml=test-results.xml || true

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: test-results
          path: test-results.xml

  security_scan_snyk:
    needs: build_lint_test
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Snyk Security Scan
        uses: snyk/actions/python-3.10@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
            --skip-unresolved=true
          

  code_quality_sonar:
    needs: build_lint_test
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: sonarsource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  
  release-please:
    needs: [code_quality_sonar, security_scan_snyk]
    if: success() && github.ref == 'refs/heads/main'
    uses: Alkimi-Exchange/composite-actions/.github/workflows/release.yml@release-please
    with:
      release-type: "python"

  notify_ci_failure:
    needs: [build_lint_test, security_scan_snyk, code_quality_sonar, release-please]
    if: failure()
    uses: Alkimi-Exchange/composite-actions/.github/workflows/notify.yml@release-please
    with:
      SLACK_MESSAGE: "ðŸš¨ Build failed in *${{ github.repository }}* on `${{ github.ref_name }}`"
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
