name: release-please

on:
  workflow_call:
    inputs:
      release-type:
        description: "release-type"
        required: true
        type: string
      gcp-project-id: 
        description: "GCP Project Id"
        required: true
        type: string
    secrets:
      GCR_JSON_KEY:
        required: true
permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: ${{ inputs.release-type }}

      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.releases_created }}
        with:
          fetch-depth: 0  # Ensure we fetch all tags

      - name: Tag major and minor versions
        if: ${{ steps.release.outputs.releases_created }}
        continue-on-error: true
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Ensure release outputs are valid
          if [ -z "${{ steps.release.outputs.major }}" ] || [ -z "${{ steps.release.outputs.minor }}" ]; then
            echo "Error: Release major or minor version is missing."
            exit 1
          fi

          # Delete remote tags first
          git push origin --delete v${{ steps.release.outputs.major }} || true
          git push origin --delete v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true

          # Delete local tags
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true

          # Create and push new tags
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"

          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}

      - name: Login to GCR
        if: ${{ steps.release.outputs.releases_created }}
        uses: docker/login-action@v3
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}

      - name: Tag and push Docker image
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          IMAGE_TAG="gcr.io/${{ inputs.gcp-project-id }}/${REPO_LOWER}:${SHORT_SHA}"
          VERSION="${{ steps.release.outputs.version }}"
      
          if [ -z "$VERSION" ]; then
            echo "Error: Release version is missing!"
            exit 1
          fi
      
          IMAGE_TAG_SEMVER="gcr.io/${{ inputs.gcp-project-id }}/${REPO_LOWER}:${VERSION}"
      
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "IMAGE_TAG_SEMVER=${IMAGE_TAG_SEMVER}" >> $GITHUB_ENV
      
          docker pull ${IMAGE_TAG} || true
          docker tag ${IMAGE_TAG} ${IMAGE_TAG_SEMVER}
          docker push ${IMAGE_TAG_SEMVER}
        
      
        
